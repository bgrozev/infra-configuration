#!/bin/bash

#set -e
#set -x

export TMP_DIR="/mnt/dump-coturn"

if [ ! -d "$TMP_DIR" ]; then
    mkdir $TMP_DIR
fi

function dump_logs_by_pid(){

    JPID=`ps aux | grep turnserver | grep -v grep | awk '{ print $2; }'`
    JSTAMP=`date +%Y-%m-%d-%H%M`
    JHOST=`hostname -s`

    echo "HOST: $JHOST, PID: $JPID, STAMP: $JSTAMP, TMP_DIR: $TMP_DIR" >> /tmp/coturn_dump.log

    echo "---------HOST: $JHOST netstat -paunt OUTPUT $JSTAMP---------" >> $TMP_DIR/coturn_netstat_dump.log
    netstat -paunt|grep turn|grep -v grep >> $TMP_DIR/coturn_netstat_dump.log

    echo "---------HOST: $JHOST LSOF -p $JPID OUTPUT $JSTAMP---------" >> $TMP_DIR/coturn_lsof_dump.log
    lsof -p $JPID >> $TMP_DIR/coturn_lsof_dump.log

    echo "---------HOST: $JHOST DISK SPACE $JSTAMP---------" >> $TMP_DIR/df_dump.log
    df -h >> $TMP_DIR/df_dump.log

    echo "---------HOST: $JHOST PS OUTPUT $JSTAMP---------" >> $TMP_DIR/ps_dump.log
    ps auxwww >> $TMP_DIR/ps_dump.log

    echo "---------HOST: $JHOST PSTREE OUTPUT $JSTAMP---------" >> $TMP_DIR/ps_tree.log
    pstree -pal >> $TMP_DIR/ps_tree.log

    echo "---------HOST: $JHOST TOP OUTPUT $JSTAMP---------" >> $TMP_DIR/top_dump.log
    top -n 1 -b >> $TMP_DIR/top_dump.log

    echo "---------HOST: $JHOST LSOF OUTPUT $JSTAMP---------" >> $TMP_DIR/lsof_dump.log
    lsof >> $TMP_DIR/lsof_dump.log

    echo "---------HOST: $JHOST SS -tuaxnp OUTPUT $JSTAMP---------" >> $TMP_DIR/ss_dump.log
    ss -tuaxnp >> $TMP_DIR/ss_dump.log

}

function copy_system_logs() {

    cp -a /var/log/cloud-init* $TMP_DIR

    cp -a /var/log/bootstrap.log $TMP_DIR

    cp -a /var/log/postinstall-ansible.log $TMP_DIR

    mkdir $TMP_DIR/coturn

    cp -a /var/log/coturn/* $TMP_DIR/coturn

    cp -a /var/log/monit* $TMP_DIR

    mkdir $TMP_DIR/local

    cp -a /var/log/local/* $TMP_DIR/local

    cp -a /var/log/syslog $TMP_DIR

}

function send_to_s3(){
    
    CURL_BIN="/usr/bin/curl"
    CURRENT_EC2_REGION=$($CURL_BIN -s http://169.254.169.254/latest/dynamic/instance-identity/document | jq .region -r)
    AWS="/usr/local/bin/aws"

    EC2_REGION="{{jitsi_dump_sns_region}}"
    export AWS_DEFAULT_REGION=$EC2_REGION

    S3_BUCKET="{{jitsi_dump_s3_bucket}}"
    SNS_TOPIC_ARN="{{jitsi_dump_sns_topic}}"

    JSTAMP=`date +%Y-%m-%d-%H%M`
    JHOST=`hostname -s`

    if [ -z $ARCH_PATH ]; then
        export ARCH_PATH="/mnt/$JHOST-$JSTAMP-coturn-dump.tar.gz"
    fi

    tar zcf $ARCH_PATH -C $TMP_DIR . && echo "$ARCH_PATH" >> /tmp/coturn_dump.log

    [ -d $TMP_DIR ] && rm -r $TMP_DIR

    # Assuming AWS CLI is already configured by Ansible
    # and EC2 instance role implies write access to this bucket

    echo "Uploading to S3." >> /tmp/coturn_dump.log
    DUMP_PATH="s3://${S3_BUCKET}/`basename $ARCH_PATH`"

    $AWS s3 cp $ARCH_PATH s3://${S3_BUCKET}/ >> /tmp/coturn_dump.log 2>&1

    echo $DUMP_PATH >>/tmp/coturn_dump.log

    MESSAGE="COTURN Failed health checks.  Dumps available at: $DUMP_PATH"
    $AWS sns publish --topic-arn=$SNS_TOPIC_ARN --message="$MESSAGE"

}

case $1 in
        dump_logs_by_pid)
           logger "Dump coturn logs by PID"
           dump_logs_by_pid
        ;;
        copy_system_logs)
            logger "Copy system logs"
            copy_system_logs
        ;;
        send_to_s3)
           logger "Send logs dump to S3 "
           send_to_s3
        ;;
        copy_and_send)
            logger "Copy system logs and send dump to the S3"
            copy_system_logs
            send_to_s3
        ;;
        *)
            logger "Skip logs dumping"
            exit 0
        ;;
esac
